// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports.Source = (function(_super) {
    __extends(Source, _super);

    function Source(opts) {
      if (opts == null) {
        opts = {};
      }
      Source.__super__.constructor.apply(this, arguments);
      this.queueSize = opts.queueSize || 524288;
      this.queue = new Buffer;
    }

    Source.prototype._write = function(chunk, encoding, callback) {
      var data;
      data = new Buffer(chunk, encoding);
      if (data.length > this.queueSize) {
        this.queue = data.slice(data.length - this.queueSize);
        return callback();
      }
      this.queue = Buffer.concat(this.queue.slice(data.length), data);
      return callback();
    };

    Source.prototype._read = function(size) {
      size = Math.min(this.queueSize, size);
      if (!(size > 0)) {
        return;
      }
      this.push(this.queue.slice(0, size));
      return this.queue = this.queue.slice(size);
    };

    return Source;

  })(Stream.Duplex);

}).call(this);
